name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            output: doc-builder-linux-amd64
          - goos: linux
            goarch: arm64
            output: doc-builder-linux-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          go build -ldflags="-s -w" -o ${{ matrix.output }} ./cmd/docbuilder
          
      - name: Compress binary
        run: |
          if [[ "${{ matrix.goos }}" == "windows" ]]; then
            zip ${{ matrix.output }}.zip ${{ matrix.output }}
          else
            tar -czf ${{ matrix.output }}.tar.gz ${{ matrix.output }}
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output }}
          path: ${{ matrix.output }}.*

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Extract artifacts
        run: |
          mkdir -p release-assets
          for artifact_dir in artifacts/*/; do
            if [ -d "$artifact_dir" ]; then
              cp "$artifact_dir"/* release-assets/
            fi
          done

      - name: Generate checksums
        run: |
          cd release-assets
          sha256sum * > checksums.txt

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Changes in ${{ github.ref_name }}
            
            ### Downloads
            - Linux AMD64: `doc-builder-linux-amd64.tar.gz`
            - Linux ARM64: `doc-builder-linux-arm64.tar.gz`
            
            ### Installation
            1. Download the appropriate binary for your Linux system (AMD64 or ARM64)
            2. Extract the archive: `tar -xzf doc-builder-linux-*.tar.gz`
            3. Make the binary executable: `chmod +x doc-builder-linux-*`
            4. Move to your PATH or use directly
            
            ### Verification
            Use the provided `checksums.txt` file to verify the integrity of downloaded binaries:
            ```bash
            sha256sum -c checksums.txt
            ```
          files: release-assets/*
          draft: false
          prerelease: false
